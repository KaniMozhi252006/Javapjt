package Shopping;

import java.awt.*;
import java.awt.event.*;
import java.net.URL;
import java.util.ArrayList;

class Medicine {
    String name;
    double price;

    Medicine(String name, double price) {
        this.name = name;
        this.price = price;
    }

    @Override
    public String toString() {
        return name + " - $" + price;
    }
}

class ShoppingCart {
    ArrayList<Medicine> cart = new ArrayList<>();

    void add(Medicine medicine) {
        cart.add(medicine);
    }

    void remove(Medicine medicine) {
        cart.remove(medicine);
    }

    double total() {
        double total = 0;
        for (Medicine m : cart) {
            total += m.price;
        }
        return total;
    }

    ArrayList<Medicine> getItems() {
        return cart;
    }
}

public class ShoppingCartApp extends Frame implements ActionListener {
    private static final long serialVersionUID = 1L;
    TextField medNameField, medPriceField;
    TextArea cartDisplay;
    ShoppingCart cart;
    Image bgImage;

    public ShoppingCartApp() {
        cart = new ShoppingCart();

        // Load the background image from a URL
        try {
            URL imageUrl = new URL("https://img.freepik.com/premium-photo/pharmacy-shopping-online-grocery-cart-with-medicine-pills_96727-2449.jpg"); // Replace with your image URL
            bgImage = Toolkit.getDefaultToolkit().getImage(imageUrl);
        } catch (Exception e) {
            System.out.println("Error loading image: " + e.getMessage());
        }

        setLayout(new FlowLayout());
        setSize(400, 300);
        setTitle("Shopping Cart System");

        Label medNameLabel = new Label("Medicine Name:");
        add(medNameLabel);
        medNameField = new TextField(15);
        add(medNameField);

        Label medPriceLabel = new Label("Price:");
        add(medPriceLabel);
        medPriceField = new TextField(5);
        add(medPriceField);

        Button addButton = new Button("Add to Cart");
        addButton.addActionListener(this);
        add(addButton);

        Button viewButton = new Button("View Cart");
        viewButton.addActionListener(this);
        add(viewButton);

        Button removeButton = new Button("Remove Item");
        removeButton.addActionListener(this);
        add(removeButton);

        Button totalButton = new Button("Calculate Total");
        totalButton.addActionListener(this);
        add(totalButton);

        cartDisplay = new TextArea(10, 30);
        add(cartDisplay);

        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent we) {
                dispose();
            }
        });

        setVisible(true);
    }

    @Override
    public void paint(Graphics g) {
        // Draw the background image
        if (bgImage != null) {
            g.drawImage(bgImage, 0, 0, getWidth(), getHeight(), this);
        }
        super.paint(g);
    }

    public void actionPerformed(ActionEvent e) {
        String command = e.getActionCommand();
        if (command.equals("Add to Cart")) {
            String name = medNameField.getText();
            double price;
            try {
                price = Double.parseDouble(medPriceField.getText());
                cart.add(new Medicine(name, price));
                cartDisplay.append(name + " added to cart.\n");
            } catch (NumberFormatException ex) {
                cartDisplay.append("Invalid price.\n");
            }
        } else if (command.equals("View Cart")) {
            cartDisplay.setText("");
            for (Medicine m : cart.getItems()) {
                cartDisplay.append(m.toString() + "\n");
            }
        } else if (command.equals("Remove Item")) {
            String name = medNameField.getText();
            for (Medicine m : cart.getItems()) {
                if (m.name.equalsIgnoreCase(name)) {
                    cart.remove(m);
                    cartDisplay.append(name + " removed from cart.\n");
                    return;
                }
            }
            cartDisplay.append("Item not found in cart.\n");
        } else if (command.equals("Calculate Total")) {
            double total = cart.total();
            cartDisplay.append("Total: $" + total + "\n");
        }
    }

    public static void main(String[] args) {
        new ShoppingCartApp();
    }
}
